{% if __SELF__.uploader_enable %}
    
    <input name="files[]" type="file" multiple>
    
    {% put scripts %}
    <script>
        
        var pond;
        addEventListener('page:loaded', function() {
            const inputElement = document.querySelector('[data-request="{{ __SELF__.alias }}::onFormSubmit"] input[type="file"]');

            FilePond.registerPlugin(FilePondPluginFileValidateType);
            FilePond.registerPlugin(FilePondPluginFileValidateSize);

            pond = FilePond.create(inputElement, {
                onwarning: (status, files) => { alert('{{ "The maximum number of file is"|_ }} {{ __SELF__.max_files }}') },
                
                maxFiles: '{{ __SELF__.max_files }}',
                storeAsFile: true,
                allowReorder: true,
                //checkValidity: true,
                credits: null,
                
                // Labels
                labelIdle: '{{ __SELF__.uploader_label|_ }}',
                labelInvalidField: '{{ "Field contains invalid files"|_ }}',

                // File types validation
                allowFileTypeValidation: true,
                acceptedFileTypes: {{ __SELF__.allowed_filetypes|keys|json_encode|raw }},
                fileValidateTypeLabelExpectedTypesMap: {{ __SELF__.allowed_filetypes|json_encode|raw }},
                labelFileTypeNotAllowed: '{{ "File of invalid type"|_ }}',
                fileValidateTypeLabelExpectedTypes: '{{ "Expects {allButLastType} or {lastType}"|_ }}',

                // File sizes validation
                allowFileSizeValidation: true,
                maxFileSize: '{{ __SELF__.max_filesize }}',
                maxTotalFileSize: '{{ __SELF__.max_totalsize }}',
                labelMaxFileSizeExceeded: '{{ "File is too large"|_ }}',
                labelMaxFileSize: '{{ "Maximum file size is {filesize}"|_ }} ',
                labelMaxTotalFileSizeExceeded: '{{ "Maximum total size exceeded"|_ }}',
                labelMaxTotalFileSize: '{{ "Maximum total file size is {filesize}"|_ }} ',
            });
        })
    </script>
    {% endput %}
    
{% endif %}